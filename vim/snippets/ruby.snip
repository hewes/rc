snippet do
abbr do .. end
  do |${1}|
        ${2:body}
  end${3}
snippet puts
  puts "${1}"${2}

snippet each
abbr each {|var|..}
  each{|${1:var}|
    ${2:body}
  }${3}

snippet each_do
abbr each do..end
  each do |${1:var}|
        ${2:body}
  end${3}

snippet map
abbr map {|var|..}
  map{|${1:var}|
        ${2:body}
  }${3}

snippet map_do
abbr map do .. end
  map do |${1:var}|
        ${2:body}
  end${3}

snippet inject
abbr inject {|result, var|..}
  inject(${1}){|${2:result}, ${3}|
        ${4:body}
  }${5}

snippet inject_do
abbr inject do |result, var|..end
  inject(${1}) do |${2:result}, ${3}|
        ${4:body}
  end${5}

snippet     def
abbr        def..end
prev_word   '^'
  def ${1}
    ${2}
  end

snippet     class
abbr        class..end
prev_word   '^'
  class ${1}
    ${2}
  end

snippet     module
abbr        module..end
prev_word   '^'
  module ${1}
    ${2}
  end

snippet     begin_rescue
abbr        begin..rescue..end
prev_word   '^'
  begin
    ${1}
  rescue ${2}
    ${3}
  end

snippet     exception
abbr        Exception => ex
  Exception => ex

snippet     test_case
abbr        Test::Unit::TestCase
  Test::Unit::TestCase

